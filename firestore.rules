rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Admin-only collections
    match /quizzes/{quizId} {
      allow read: if isAuthenticated() && (
        resource.data.createdBy == request.auth.uid || 
        exists(/databases/$(database)/documents/sessions/$(quizId))
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
    }
    
    // Session management
    match /sessions/{sessionId} {
      allow read: if true;  // Anyone can read session data
      allow create: if isAuthenticated();  // Only authenticated users can create sessions
      allow update: if true;  // Allow updates for session state changes
      
      // Allow participants to be added without authentication
      match /participants/{participantId} {
        allow read: if true;
        allow create: if true;  // Allow anyone to create a participant
        allow write: if true;  // Allow anyone to update their own participant data
        allow update: if true;  // Allow anyone to update their own participant data
      }
    }
      
    // Allow answers to be submitted without authentication
    match /answers/{answerId} {
      allow read: if true;
      allow create: if true;  // Allow anyone to submit answers
    }
  }
} 
